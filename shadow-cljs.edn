{ ;:lein   {:profile "+cljs"}

 :dependencies [[org.clojure/clojurescript "1.10.773"]
                ;[thheller/shadow-cljs "2.8.94"] ; 106
                [thi.ng/strf "0.2.2"]
                [com.lucasbradstreet/cljs-uuid-utils "1.0.2"]
                [check "0.1.0-SNAPSHOT"]
                [funcool/promesa "4.0.2"]
                [paprika "0.1.3-SNAPSHOT"]
                [borkdude/sci "0.0.13-alpha.17"]
                [compliment "0.4.0-SNAPSHOT"]
                [rewrite-cljs "0.4.4"]
                [org.rksm/suitable "0.3.2"  :exclusions [org.clojure/clojurescript]]
                [cider/orchard "0.5.8"]
                [etaoin "0.3.6"]
                [reagent "0.10.0" :exclusions [org.clojure/tools.reader
                                               cljsjs/react
                                               cljsjs/react-dom]]
                [re-frame "0.12.0"]
                [com.taoensso/timbre "4.10.0"]  ; clojurescript logging
                [com.taoensso/encore "2.119.0"]
                [com.taoensso/sente "1.15.0"] ;  websocket
                [clj-commons/secretary "1.2.4"]   ; client side routing - TODO: Should likely be replaced by jux/bidi
                [org.pinkgorilla/gorilla-ui "0.1.44"]]
 
 
 :source-paths ["src"]

 :resource-paths  ["resources"
                   "node_modules/leaflet/dist"
                   "node_modules/mathjax/es5"
                   "node_modules/ag-grid-community"]

 ; shadow dev http server settings
 :dev-http {8000 ["target"
                  ;"classpath:public" 
                  ;"resources/public" 
                  "classpath:resources"
                  "classpath:resources/public"
                  "resources/public"
                   "node_modules" ; access css and bundles in npm dependencies
                  #_"node_modules/leaflet/dist"
                  #_"node_modules/mathjax/es5"
                  #_"node_modules/ag-grid-community"]}

 :builds {:web {:target :browser
                :output-dir "target"
                :asset-path "/"
                :modules {:main {:entries [shiny.web]}}
                :devtools {:before-load shiny.web/stop
                           :after-load shiny.web/start}
                :js-options       {:minimize-require false ; module requires full name instead of index
                                                        ;:js-package-dirs ["packages/babel-worker/node_modules"]
                                                        ;:js-provider :require
                                   }
                ;:compiler-options {;; preferrably implicit by shadow-cljs compile/watch/release
                                                        ;; Beware: releasing :none not supported by shadow
                                                        ;; :optimizations   :none
                ;                   :optimizations   :simple} ; self-hosted cljs
                }

          :ci {:target :karma
               :output-to  "target/ci.js"
               :ns-regexp "-test$"}}}

