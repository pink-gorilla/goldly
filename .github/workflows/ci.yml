name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Prepare java
      uses: actions/setup-java@v1
      with:
        java-version: 1.14
    - name: Install clojure tools
      uses: DeLaGuardo/setup-clojure@3.2
      with:
        # Install just one or all simultaneously
        cli: 1.10.1.693 # Clojure CLI based on tools.deps
        lein: 2.9.1     # or use 'latest' to always provision latest version of leiningen
        #boot: 2.8.3     # or use 'latest' to always provision latest version of boot
    - name: Execute clojure code on Linux and MacOS
      if: ${{ matrix.os != 'windows-latest' }}
      run: clojure -e "(+ 1 1)"
      shell: bash
    - name: clj-fmt
      if: ${{ matrix.os != 'windows-latest' }}
      run: clojure -M:cljfmt
      shell: bash
    - name: show git tag
      run: clojure -M:garamond
    #- name: clj-kondo
    #  run: clojure -M:lint
    #- name: test-clj
    #  run: clojure -M:test-clj
    #- name: cloverage
    #  run: clojure -M:cloverage
    - name: Release
      if: success()
      # if: github.event_name == 'push'
      env:
        CLOJARS_USERNAME: ${{ secrets.ReleaseUsername }}
        CLOJARS_PASSWORD: ${{ secrets.ReleasePassword }}
        CODECOV_TOKEN: ${{ secrets.CodecovToken }}
      run: |
        git config --global user.email "ci@pinkgorilla.org"
        git config --global user.name "CI/CD"
        clojure -M:release --patch
        git push --tags
      #  clojure -M:release tag --minor
      #  clojure -M:release pom
      #  clojure -M:release jar
      # clojure -M:release deploy
      # lein release
      # bash <(curl -s https://codecov.io/bash)