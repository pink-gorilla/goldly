{:paths ["script"
         "target/node_modules"]
 :deps {babashka/fs {:mvn/version "0.1.1"}
        ;borkdude/gh-release-artifact
       ; {:git/url "https://github.com/borkdude/gh-release-artifact"
       ;  :sha "2f8898d84126a4e922c490f8614211a8b0cf67cd"}
       ; com.github.liquidz/antq {:mvn/version "RELEASE"}
       ; 
        }

 :tasks {:requires [;deps 
                    webly
                    [clojure.edn :as edn]
                    [babashka.fs :as fs]]
         ; dev tools
         lint (webly/clojure "goldly" "-M:lint"
                             "." ; "../goldly-test"
                             )  ; "../goldly-docs" nothing to lint in goldly-docs
         cljfmt-check (webly/clojure "goldly" "-M:cljfmt" "check"
                                     "." "../goldly-docs" "../goldly-test")
         cljfmt-fix (webly/clojure "goldly" "-M:cljfmt" "fix"
                                   "." "../goldly-docs" "../goldly-test")
         deps-tree (webly/clojure "goldly" "-X:deps" "tree")
         outdated (webly/clojure "goldly" "-M:outdated")

         ; build
         clean (do (webly/clean-project ".")
                   (webly/clean-project "./goldly")
                   (webly/clean-project "./goldly-docs")
                   (webly/clean-project "./goldly-test"))
         npm-install (webly/run "goldly-docs" "goldly" "npm-install")
         build-ci (webly/run "goldly-docs" "goldly" "ci")
         ;copy-resources (shell {:dir "goldly-docs"} "../script/copy_res.sh")
         ;get-fonts  (shell {:dir "goldly-docs"} "../script/get-fonts.sh")

         build {:depends [npm-install
                          build-ci
                          ;tailwind-girouette-webly
                          ;copy-resources
                          ;get-fonts
                          ]
                :task (shell "echo" "cljs bundle has been built!")}

         ; tests
         test-clj (webly/clojure "goldly" "-M:test-clj")
         ;test-cljs (shell {:dir "goldly-docs"} "npm" "test")

         ;; CI
         ci-check {:depends [cljfmt-check
                             build
                             test-clj
                             ;test-cljs
                             ]
                   :task (shell "echo" "ci checks are ok!")}

         commit-check {:doc "if this succeeds, then the github ci pipeline will work too."
                       :depends [clean
                                 cljfmt-fix
                                 ci-check]
                       :task (shell "echo" "all good - you can push to github")}


         ;; JAR 
         jar {:doc "Builds the jar"
              :task (webly/clojure "goldly-docs" "-T:build" "jar")}

         clojars {:doc "Deploys the jar to clojars"
                  :task (webly/clojure "goldly-docs" "-T:build" "deploy")}

         tag {:doc "Tags release and pushes tag to Github."
              :task (let [version (-> (slurp "goldly-docs/resources/META-INF/pink-gorilla/goldly-docs/meta.edn")
                                      edn/read-string
                                      :version)
                          tag (str "v" version)]
                      (shell "git tag" tag)
                      (shell "git push origin" tag))}

         ci-deploy {:doc "Deploys the jar to clojars"
                 ;; ensure sequential order becauce tag reads from info.edn made
                 ;; by build.clj
                    :task (do
                            (run 'jar)
                            (run 'clojars)
                            (run 'tag))}

         jar-extract {:doc "Extracts generated jar (for debugging)"
                      :task (shell {:dir "goldly-docs/target"} "fastjar" "xf" "webly-0.4.516.jar")}

         ;; devtest

        ; devtest-webserver-https (webly/clojure "webserver" "-X:webserver")

         ;; goldly-test
         goldly-test {:doc "goldly-test with shadow-cljs watch"
                      :task (do  ;(run 'tailwind-girouette-webly)
                              (webly/run "goldly-test" "goldly" "watch2"))}


         ;; goldly-docs

         goldly-docs {:doc "goldlly docs with shadow-cljs watch"
                      :task (do  ;(run 'tailwind-girouette-webly)
                              (webly/run "goldly-docs" "goldly" "watch2"))}
         goldly-docs-tenx {:doc "goldlly docs with shadow-cljs watch"
                           :task (do  (webly/run "goldly-docs" "goldly" "watch"))}
         goldly-docs-compile {:doc "compilegoldlly docs javascript"
                              :task (webly/run "goldly-docs" "goldly" "release")}
         goldly-docs-jetty {:doc "serve compiled goldlly docs javascript with jetty"
                            :task (webly/run "goldly-docs" "goldly" "jetty")}

         ; STATIC PAGE

         copy-static {:doc "Prepares the static page"
                      :task (do (fs/delete-tree "docs")
                                ;(fs/create-dirs "docs/r/webly")
                                (fs/create-dirs "docs/r")
                                (fs/copy-tree "goldly-docs/target/webly/public" "docs" {:replace-existing true})
                                ;(fs/copy-tree "goldly-docs/target/node_modules/public" "docs/r" {:replace-existing true})
                                ;(fs/copy-tree "goldly-docs/target/res/public" "docs/r" {:replace-existing true})
                                )}
         
         update-static {:doc "Compiles Bundel and copies static"
                        :task (do (run 'clean)
                                  (run 'npm-install)
                                  (run 'demo-compile)
                                  ;(run 'tailwind-girouette-webly)
                                  (run 'copy-resources)
                                  (run 'get-fonts)
                                  (run 'copy-static))}


 ;        
         }}